.Dd February 16, 2021
.Dt S6-TLSSERVER 1
.Os
.Sh NAME
.Nm s6-tlsserver
.Nd UCSPI server tool[1] for TLS/SSL connections over INET domain sockets
.Sh SYNOPSIS
.Nm
.Op Ar options
.Op --
.Ar ip
.Ar port
.Ar prog...
.Sh DESCRIPTION
.Nm
acts as a TCP super-server that listens to connections, accepts them,
and for each connection, establishes a TLS transport over it, then
executes into a program.
.Pp
.Nm
rewrites itself into a command line involving:
.Bl -bullet -width x
.It
.Xr s6-tcpserver 1 ,
which listens to TCP connections on IP address
.Ar ip
port
.Ar port
and forks a command line for every connection.
Note that
.Xr s6-tcpserver 1
also rewrites itself into a more complex command line
.Po
the final long-lived process being
.Xr s6-tcpserver4d 1
or
.Xr s6-tcpserver6d 1
.Pc ,
so your end command line may look a lot longer in
.Xr ps 1
than what you originally wrote.
This is normal and healthy.
.It
(If applicable)
.Xr s6-tcpserver-access 1 ,
which performs TCP access control and various operations on the TCP
connection.
.It
.Xr s6-tlsd 1 ,
which establishes a TLS transport (server-side) over a connection, via
an
.Xr s6-tlsd-io 1
child process.
.It
(If applicable)
.Xr s6-applyuidgid 1 ,
which drops root privileges.
.It
.Ar prog... ,
your client program, which is run with the
.Xr s6-tlsd 1 .
.El
.Pp
It runs until it is killed by a signal.
.Pp
.Ar prog
is expected to read from its peer on its standard input and write to
its peer on its standard output.
Since there will be an
.Xr s6-tlsd-io 1
program between
.Ar prog
and the network to perform the SSL encryption/decryption, those
descriptors will not be a network socket - they will be pipes.
.Ss Signals
.Nm
reacts to the same signals as
.Xr s6-tcpserver4d 1
or
.Xr s6-tcpserver6d 1 ,
one of which is the long-lived process hanging around.
.Sh OPTIONS
.Nm
accepts a myriad of options, most of which are passed as is to the
correct executable.
Not giving any options will generally work, but unless you're running
a very public server (such as a Web server) or base your access
control on client certificates, you probably still want TCP access
rules.
.Ss Options handled directly by s6-tlsserver
.Bl -bullet -width x
.It
.Fl e
indicates that
.Xr s6-tcpserver-access 1
should be invoked, even if no other option requires it, even in the
absence of an access control ruleset.
This ensures that
.Ar prog...
will always have access to environment variables such as
.Ev TCPLOCALPORT .
This option also ensures that the log does not get spammed with
spurious
.Dq no ruleset
warnings if the
.Fl v
option has been
given but no
.Fl i
or
.Fl x
option.
.El
.Ss Options passed as-is to Xr s6-tcpserver 1
.Bl -bullet -width x
.It
.Fl q ,
.Fl Q ,
.Fl v
.It
.Fl 4 ,
.Fl 6
.It
.Fl 1
.It
.Fl c Ar maxconn
.It
.Fl C Ar localmaxconn
.It
.Fl b Ar backlog
.El
.Ss Options passed as-is to Xr s6-tcpserver-access 1
.Bl -bullet -width x
.It
The verbosity level, if not default, as
.Ql -v0
or
.Ql -v2
.It
.Fl w ,
.Fl W
.It
.Fl d ,
.Fl D
.It
.Fl r ,
.Fl R
.It
.Fl p ,
.Fl P
.It
.Fl h ,
.Fl H ,
.Fl l Ar localname
.It
.Fl B Ar banner
.It
.Fl t Ar timeout
.It
.Fl i Ar rulesdir ,
.Fl x Ar rulesfile
.El
.Ss Options passed as-is to Xr s6-tlsd 1
.Bl -bullet -width x
.It
.Fl Z ,
.Fl z
.It
.Fl S ,
.Fl s
.It
.Fl Y ,
.Fl y
.It
.Fl k Ar servername
.Fl K Ar kimeout
.El
.Ss Options passed to Xr s6-applyuidgid 1
.Bl -bullet -width x
.It
.Fl u Ar uid ,
.Fl g Ar gid ,
.Fl G Ar gidlist
.It
.Fl U
.Po
passed as
.Ql -Uz
.Pc
.El
.Sh ENVIRONMENT
.Ss Read
The following variables should be set before invoking
.Nm ,
because they will be used by
every
.Xr s6-tlsd 1
invocation:
.Bl -tag -width x
.It Ev KEYFILE
.It Ev CERTFILE
.It Ev TLS_UID and Ev TLS_GI
(if you run
.Nm
as root)
.It Ev CADIR
(If you want client certificates)
.It Ev CAFILE
.Po
If you want client certificates, alternative to
.Ev CADIR
.Pc
.El
.Pp
Setting both
.Ev KEYFILE
and
.Ev CERTFILE
is mandatory.
.Ss Written
.Ar prog...
is run with the following variables added to,
or removed from, its environment by
.Xr s6-tcpserver4d 1
or
.Xr s6-tcpserver6d 1 ,
and possibly by
.Xr s6-tcpserver-access 1 :
.Bl -tag -width x
.It Ev PROTO
.It Ev TCPREMOTEIP
.It Ev TCPREMOTEPORT
.It Ev TCPCONNNUM
.It Ev TCPLOCALIP
.It Ev TCPLOCALPORT
.It Ev TCPREMOTEHOST
.It Ev TCPLOCALHOST
.It Ev TCPREMOTEINFO
.El
.Pp
Depending on TCP access rules (if the
.Fl i
or
.Fl x
option has been given), it is possible that
.Ar prog Ap
s environment undergoes more modifications.
Also, since
.Xr s6-tlsd 1
is always run after
.Xr s6-tcpserver-access 1 ,
it is possible to set different TLS/SSL parameters
.Po
typically a different
.Ev KEYFILE
and
.Ev CERTFILE
.Pc
depending on the client connection, by writing the correct set of TCP
access rules.
.Pp
Unless the
.Fl Z
option is given to
.Nm ,
the
.Ev CADIR ,
.Ev CAFILE ,
.Ev KEYFILE ,
.Ev CERTFILE ,
.Ev TLS_UID
and
.Ev TLS_GID
variables will not appear in
.Ar prog Ap
s environment.
.Sh EXAMPLES
As root:
.Bd -literal -offset indent
KEYFILE=/etc/ssl/private/mykey.der CERTFILE=/etc/ssl/public/mycert.pem \\
TLS_UID=65534 TLS_UID=65536 \\
s6-envuidgid www s6-tlsserver -U -- 1.2.3.4 443 httpd
.Ed
.Pp
This will start a server listening to 1.2.3.4 on TCP port 443, and for
every connection, spawn the
.Ql httpd
program reading queries on stdin and replying on stdout, as user
.Ql www ,
with a TLS layer protecting the connection, the TLS engine running as
user
.Ql nobody
.Po
.Ql 65534:65534 Ns
.Pc .
The server is authentified by the certificate in
.Pa /etc/ssl/public/mycert.pem
that it sends to the client, and the private key in
.Pa /etc/ssl/private/mykey.der
that it keeps to itself.
.Sh SEE ALSO
.Xr s6-applyuidgid 1 ,
.Xr s6-tcpserver 1 ,
.Xr s6-tcpserver-access 1 ,
.Xr s6-tcpserver4d 1 ,
.Xr s6-tcpserver6d 1 ,
.Xr s6-tlsc 1 ,
.Xr s6-tlsc-io 1 ,
.Xr s6-tlsclient 1 ,
.Xr s6-tlsd 1 ,
.Xr s6-tlsd-io 1 ,
.Xr s6-ucspitlsc 1 ,
.Xr s6-ucspitlsd 1 ,
.Xr s6-tls 7
.Pp
[1]
.Lk https://cr.yp.to/proto/ucspi.txt
.Pp
This man page is ported from the authoritative documentation at:
.Lk https://skarnet.org/software/s6-networking/s6-tlsserver.html
.Sh AUTHORS
.An Laurent Bercot
.An Alexis Ao Mt flexibeast@gmail.com Ac (man page port)
